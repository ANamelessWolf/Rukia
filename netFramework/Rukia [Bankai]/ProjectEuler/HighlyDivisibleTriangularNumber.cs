using Nameless.Libraries.Rukia.ProjectEuler.Utility;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Nameless.Libraries.Rukia.ProjectEuler
{
    /// <summary>
    /// The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
    /// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
    /// Let us list the factors of the first seven triangle numbers:
    ///     1: 1
    ///     3: 1,3
    ///     6: 1,2,3,6
    ///    10: 1,2,5,10
    ///    15: 1,3,5,15
    ///    21: 1,3,7,21
    ///    28: 1,2,4,7,14,28
    /// We can see that 28 is the first triangle number to have over five divisors.
    /// What is the value of the first triangle number to have over five hundred divisors?
    /// </summary>
    public class HighlyDivisibleTriangularNumber
    {
        /// <summary>
        /// The multple sum result
        /// </summary>
        public long Result { get { return Solve(); } }
        /// <summary>
        /// Get the largest prime factor for the given number
        /// </summary>
        public HighlyDivisibleTriangularNumber()
        {

        }
        /// <summary>
        /// Solve the problem
        /// </summary>
        /// <returns>The sum result</returns>
        private long Solve()
        {
            int factorCount = 0;
            long tNumber = 0;
            int index = 1;
            FactorFinder factors;
            while (factorCount <= 500)
            {
                tNumber = TriangleNumberGenerator.Get(index);
                factors = new FactorFinder(tNumber);
                factorCount = factors.CountFactors();
                index++;
                //Console.Clear();
                //Console.WriteLine("Triangle Number: " + index);
                //Console.WriteLine("Index: " + index);
                //Console.WriteLine("Factor Count: " + factorCount);
            }

            return tNumber;
        }
        /// <summary>
        /// Print the result
        /// </summary>
        /// <returns>The result</returns>
        public override string ToString()
        {
            return String.Format("The value of the first triangle number to have over 500 divisors is {0}", this.Result);
        }
    }
}
